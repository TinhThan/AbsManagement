// <auto-generated />
using System;
using AbsManagementAPI.Core.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AbsManagementAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.BangQuangCaoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DanhSachHinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDiemDatQuangCao")
                        .HasColumnType("int");

                    b.Property<int>("IdLoaiBangQuangCao")
                        .HasColumnType("int");

                    b.Property<string>("IdTinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KichThuoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("NgayCapNhat")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("NgayHetHan")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("IdDiemDatQuangCao");

                    b.HasIndex("IdLoaiBangQuangCao");

                    b.ToTable("BangQuangCao", (string)null);
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.BaoCaoViPhamEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DanhSachHinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdBangQuangCao")
                        .HasColumnType("int");

                    b.Property<int?>("IdCanBoXuLy")
                        .HasColumnType("int");

                    b.Property<int?>("IdDiemDatQuangCao")
                        .HasColumnType("int");

                    b.Property<int>("IdHinhThucBaoCao")
                        .HasColumnType("int");

                    b.Property<string>("IdTinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDungXuLy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phuong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViTri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdBangQuangCao");

                    b.HasIndex("IdCanBoXuLy");

                    b.HasIndex("IdDiemDatQuangCao");

                    b.HasIndex("IdHinhThucBaoCao");

                    b.ToTable("BaoCaoViPham", (string)null);
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.CanBoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmailVerified")
                        .HasColumnType("int");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("NgayCapNhat")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("NgaySinh")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NoiCongTac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CanBo", (string)null);
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.ChiTietChinhSuaBangQuangCaoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DanhSachHinhAnhMoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdBangQuangCao")
                        .HasColumnType("int");

                    b.Property<int>("IdDiemDatQuangCaoMoi")
                        .HasColumnType("int");

                    b.Property<int>("IdLoaiBangQuangCaoMoi")
                        .HasColumnType("int");

                    b.Property<int>("IdPhieuChinhSua")
                        .HasColumnType("int");

                    b.Property<string>("IdTinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("NgayHetHanMoi")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("IdBangQuangCao");

                    b.HasIndex("IdDiemDatQuangCaoMoi");

                    b.HasIndex("IdLoaiBangQuangCaoMoi");

                    b.HasIndex("IdPhieuChinhSua");

                    b.ToTable("ChiTietChinhSuaBangQuangCao", (string)null);
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.ChiTietPhieuChinhSuaDiemDatQuangCaoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DanhSachHinhAnhMoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChiMoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDiemDatQuangCao")
                        .HasColumnType("int");

                    b.Property<int>("IdHinhThucMoi")
                        .HasColumnType("int");

                    b.Property<int>("IdLoaiVitriMoi")
                        .HasColumnType("int");

                    b.Property<int>("IdPhieuSua")
                        .HasColumnType("int");

                    b.Property<string>("IdTinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhuongMoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuanMoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViTriMoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdDiemDatQuangCao");

                    b.HasIndex("IdHinhThucMoi");

                    b.HasIndex("IdLoaiVitriMoi");

                    b.HasIndex("IdPhieuSua");

                    b.ToTable("ChiTietPhieuChinhSuaDiemDatQuangCao", (string)null);
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.DiemDatQuangCaoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DanhSachHinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdHinhThucQuangCao")
                        .HasColumnType("int");

                    b.Property<int>("IdLoaiViTri")
                        .HasColumnType("int");

                    b.Property<string>("IdTinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phuong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViTri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdHinhThucQuangCao");

                    b.HasIndex("IdLoaiViTri");

                    b.ToTable("DiemDatQuangCao", (string)null);
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.HinhThucBaoCaoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HinhThucBaoCao", (string)null);
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.HinhThucQuangCaoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HinhThucQuangCao", (string)null);
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.LoaiBangQuangCaoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiBangQuangCao", (string)null);
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.LoaiViTriEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiViTri", (string)null);
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.PhieuChinhSuaBangQuangCaoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdCanBoDuyet")
                        .HasColumnType("int");

                    b.Property<int>("IdCanBoTao")
                        .HasColumnType("int");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("NgayCapNhat")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("IdCanBoDuyet");

                    b.HasIndex("IdCanBoTao");

                    b.ToTable("PhieuChinhSuaBangQuangCao", (string)null);
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.PhieuChinhSuaDiemDatQuangCaoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdCanBoDuyet")
                        .HasColumnType("int");

                    b.Property<int>("IdCanBoTao")
                        .HasColumnType("int");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("NgayCapNhat")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("IdCanBoDuyet");

                    b.HasIndex("IdCanBoTao");

                    b.ToTable("PhieuChinhSuaDiemDatQuangCao", (string)null);
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.BangQuangCaoEntity", b =>
                {
                    b.HasOne("AbsManagementAPI.Core.Entities.DiemDatQuangCaoEntity", "DiemDatQuangCao")
                        .WithMany("BangQuangCaos")
                        .HasForeignKey("IdDiemDatQuangCao")
                        .IsRequired()
                        .HasConstraintName("FK_BangQuangCao_DiemDatQuangCao");

                    b.HasOne("AbsManagementAPI.Core.Entities.LoaiBangQuangCaoEntity", "LoaiBangQuangCao")
                        .WithMany("BangQuangCaos")
                        .HasForeignKey("IdLoaiBangQuangCao")
                        .IsRequired()
                        .HasConstraintName("FK_BangQuangCao_LoaiBangQuangCao");

                    b.Navigation("DiemDatQuangCao");

                    b.Navigation("LoaiBangQuangCao");
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.BaoCaoViPhamEntity", b =>
                {
                    b.HasOne("AbsManagementAPI.Core.Entities.BangQuangCaoEntity", "BangQuangCao")
                        .WithMany("BaoCaoViPhams")
                        .HasForeignKey("IdBangQuangCao")
                        .HasConstraintName("FK_BaoCaoViPham_BangQuangCao");

                    b.HasOne("AbsManagementAPI.Core.Entities.CanBoEntity", "CanBoXuLy")
                        .WithMany("BaoCaoViPhams")
                        .HasForeignKey("IdCanBoXuLy")
                        .HasConstraintName("FK_BaoCaoViPham_CanBo");

                    b.HasOne("AbsManagementAPI.Core.Entities.DiemDatQuangCaoEntity", "DiemDatQuangCao")
                        .WithMany("BaoCaoViPhams")
                        .HasForeignKey("IdDiemDatQuangCao")
                        .HasConstraintName("FK_BaoCaoViPham_DiemDatQuangCao");

                    b.HasOne("AbsManagementAPI.Core.Entities.HinhThucBaoCaoEntity", "HinhThucBaoCao")
                        .WithMany("BaoCaoViPhams")
                        .HasForeignKey("IdHinhThucBaoCao")
                        .IsRequired()
                        .HasConstraintName("FK_BaoCaoViPham_HinhThucBaoCao");

                    b.Navigation("BangQuangCao");

                    b.Navigation("CanBoXuLy");

                    b.Navigation("DiemDatQuangCao");

                    b.Navigation("HinhThucBaoCao");
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.ChiTietChinhSuaBangQuangCaoEntity", b =>
                {
                    b.HasOne("AbsManagementAPI.Core.Entities.BangQuangCaoEntity", "BangQuangCao")
                        .WithMany("ChiTietChinhSuaBangQuangCaos")
                        .HasForeignKey("IdBangQuangCao")
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietChinhSuaBangQuangCao_BangQuangCao");

                    b.HasOne("AbsManagementAPI.Core.Entities.DiemDatQuangCaoEntity", "DiemDatQuangCaoMoi")
                        .WithMany("ChiTietChinhSuaBangQuangCao_CapNhatMois")
                        .HasForeignKey("IdDiemDatQuangCaoMoi")
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietChinhSuaBangQuangCao_DiemDatQuangCao");

                    b.HasOne("AbsManagementAPI.Core.Entities.LoaiBangQuangCaoEntity", "LoaiBangQuangCaoMoi")
                        .WithMany("ChiTietChinhSuaBangQuangCaos")
                        .HasForeignKey("IdLoaiBangQuangCaoMoi")
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietChinhSuaBangQuangCao_LoaiBangQuangCao");

                    b.HasOne("AbsManagementAPI.Core.Entities.PhieuChinhSuaBangQuangCaoEntity", "PhieuChinhSua")
                        .WithMany("ChiTietChinhSuaBangQuangCaos")
                        .HasForeignKey("IdPhieuChinhSua")
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietChinhSuaBangQuangCao_PhieuChinhSuaBangQuangCao");

                    b.Navigation("BangQuangCao");

                    b.Navigation("DiemDatQuangCaoMoi");

                    b.Navigation("LoaiBangQuangCaoMoi");

                    b.Navigation("PhieuChinhSua");
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.ChiTietPhieuChinhSuaDiemDatQuangCaoEntity", b =>
                {
                    b.HasOne("AbsManagementAPI.Core.Entities.DiemDatQuangCaoEntity", "DiemDatQuangCao")
                        .WithMany("ChiTietPhieuChinhSuaDiemDatQuangCao_CapNhats")
                        .HasForeignKey("IdDiemDatQuangCao")
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietPhieuChinhSuaDiemDatQuangCao_DiemDatQuangCao");

                    b.HasOne("AbsManagementAPI.Core.Entities.HinhThucQuangCaoEntity", "HinhThucQuangCaoMoi")
                        .WithMany("ChiTietPhieuChinhSuaDiemDatQuangCaos")
                        .HasForeignKey("IdHinhThucMoi")
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietPhieuChinhSuaDiemDatQuangCao_HinhThucQuangCao");

                    b.HasOne("AbsManagementAPI.Core.Entities.LoaiViTriEntity", "LoaiViTriMoi")
                        .WithMany("ChiTietPhieuChinhSuaDiemDatQuangCaos")
                        .HasForeignKey("IdLoaiVitriMoi")
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietPhieuChinhSuaDiemDatQuangCao_LoaiViTri");

                    b.HasOne("AbsManagementAPI.Core.Entities.PhieuChinhSuaDiemDatQuangCaoEntity", "PhieuChinhSua")
                        .WithMany("ChiTietPhieuChinhSuaDiemDatQuangCaos")
                        .HasForeignKey("IdPhieuSua")
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietPhieuChinhSuaDiemDatQuangCao_PhieuChinhSuaDiemDatQuangCao");

                    b.Navigation("DiemDatQuangCao");

                    b.Navigation("HinhThucQuangCaoMoi");

                    b.Navigation("LoaiViTriMoi");

                    b.Navigation("PhieuChinhSua");
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.DiemDatQuangCaoEntity", b =>
                {
                    b.HasOne("AbsManagementAPI.Core.Entities.HinhThucQuangCaoEntity", "HinhThucQuangCao")
                        .WithMany("DiemDatQuangCaos")
                        .HasForeignKey("IdHinhThucQuangCao")
                        .IsRequired()
                        .HasConstraintName("FK_DiemDatQuangCao_HinhThucQuangCao");

                    b.HasOne("AbsManagementAPI.Core.Entities.LoaiViTriEntity", "LoaiViTri")
                        .WithMany("DiemDatQuangCaos")
                        .HasForeignKey("IdLoaiViTri")
                        .IsRequired()
                        .HasConstraintName("FK_DiemDatQuangCao_LoaiViTri");

                    b.Navigation("HinhThucQuangCao");

                    b.Navigation("LoaiViTri");
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.PhieuChinhSuaBangQuangCaoEntity", b =>
                {
                    b.HasOne("AbsManagementAPI.Core.Entities.CanBoEntity", "CanBoDuyet")
                        .WithMany("PhieuChinhSuaBangQuangCao_Duyets")
                        .HasForeignKey("IdCanBoDuyet")
                        .HasConstraintName("FK_PhieuChinhSuaBangQuangCao_CanBoDuyet");

                    b.HasOne("AbsManagementAPI.Core.Entities.CanBoEntity", "CanBoTao")
                        .WithMany("PhieuChinhSuaBangQuangCao_Taos")
                        .HasForeignKey("IdCanBoTao")
                        .IsRequired()
                        .HasConstraintName("FK_PhieuChinhSuaBangQuangCao_CanBoTao");

                    b.Navigation("CanBoDuyet");

                    b.Navigation("CanBoTao");
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.PhieuChinhSuaDiemDatQuangCaoEntity", b =>
                {
                    b.HasOne("AbsManagementAPI.Core.Entities.CanBoEntity", "CanBoDuyet")
                        .WithMany("PhieuChinhSuaDiemDatQuangCao_Duyets")
                        .HasForeignKey("IdCanBoDuyet")
                        .HasConstraintName("FK_PhieuChinhSuaDiemDatQuangCao_CanBoDuyet");

                    b.HasOne("AbsManagementAPI.Core.Entities.CanBoEntity", "CanBoTao")
                        .WithMany("PhieuChinhSuaDiemDatQuangCao_Taos")
                        .HasForeignKey("IdCanBoTao")
                        .IsRequired()
                        .HasConstraintName("FK_PhieuChinhSuaDiemDatQuangCao_CanBo");

                    b.Navigation("CanBoDuyet");

                    b.Navigation("CanBoTao");
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.BangQuangCaoEntity", b =>
                {
                    b.Navigation("BaoCaoViPhams");

                    b.Navigation("ChiTietChinhSuaBangQuangCaos");
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.CanBoEntity", b =>
                {
                    b.Navigation("BaoCaoViPhams");

                    b.Navigation("PhieuChinhSuaBangQuangCao_Duyets");

                    b.Navigation("PhieuChinhSuaBangQuangCao_Taos");

                    b.Navigation("PhieuChinhSuaDiemDatQuangCao_Duyets");

                    b.Navigation("PhieuChinhSuaDiemDatQuangCao_Taos");
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.DiemDatQuangCaoEntity", b =>
                {
                    b.Navigation("BangQuangCaos");

                    b.Navigation("BaoCaoViPhams");

                    b.Navigation("ChiTietChinhSuaBangQuangCao_CapNhatMois");

                    b.Navigation("ChiTietPhieuChinhSuaDiemDatQuangCao_CapNhats");
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.HinhThucBaoCaoEntity", b =>
                {
                    b.Navigation("BaoCaoViPhams");
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.HinhThucQuangCaoEntity", b =>
                {
                    b.Navigation("ChiTietPhieuChinhSuaDiemDatQuangCaos");

                    b.Navigation("DiemDatQuangCaos");
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.LoaiBangQuangCaoEntity", b =>
                {
                    b.Navigation("BangQuangCaos");

                    b.Navigation("ChiTietChinhSuaBangQuangCaos");
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.LoaiViTriEntity", b =>
                {
                    b.Navigation("ChiTietPhieuChinhSuaDiemDatQuangCaos");

                    b.Navigation("DiemDatQuangCaos");
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.PhieuChinhSuaBangQuangCaoEntity", b =>
                {
                    b.Navigation("ChiTietChinhSuaBangQuangCaos");
                });

            modelBuilder.Entity("AbsManagementAPI.Core.Entities.PhieuChinhSuaDiemDatQuangCaoEntity", b =>
                {
                    b.Navigation("ChiTietPhieuChinhSuaDiemDatQuangCaos");
                });
#pragma warning restore 612, 618
        }
    }
}
